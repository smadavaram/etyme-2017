#content
  .row
    -#.col-xs-12.col-sm-3.col-md-3.col-lg-3.pull-right
    -#  = link_to 'New' , new_job_path ,class: 'btn btn-success btn-lg pull-right header-btn hidden-mobile'
  %section#widget-grid{style: 'margin-top: 10px;'}
    / row
    .row
      / NEW WIDGET START
      %article.col-xs-12.col-sm-12.col-md-12.col-lg-12
        / Widget ID (each widget will need unique ID)
        #wid-id-0.jarviswidget.jarviswidget-color-darken{"data-widget-editbutton" => "false"}
          %header
            %span.widget-icon
              %i.fa.fa-table
            %h2 Jobs
          / widget div
          %div
            / widget edit box
            .jarviswidget-editbox
            .widget-body.no-padding
              %table#dt_basic.table.table-striped.table-bordered.table-hover{:width => "100%"}
                %thead
                  %tr
                    %th{"data-hide" => "phone"} Title
                    %th{"data-class" => "expand"}
                      %i.fa.fa-fw.fa-calendar.txt-color-blue.hidden-md.hidden-sm.hidden-xs
                      Last-Date
                    %th Location
                    %th Posted By
                    %th{"data-hide" => "phone,tablet"}
                      Actions
                %tbody
                  =render partial: 'candidate/jobs/partials/job' ,locals: {jobs: @jobs}
- content_for :modals do
  #job_invitation

- content_for :scripts do
  :javascript
    // DO NOT REMOVE : GLOBAL FUNCTIONS!

    $(document).ready(function() {

      pageSetUp();

      /* // DOM Position key index //

       l - Length changing (dropdown)
       f - Filtering input (search)
       t - The Table! (datatable)
       i - Information (records)
       p - Pagination (paging)
       r - pRocessing
       < and > - div elements
       <"#id" and > - div with an id
       <"class" and > - div with a class
       <"#id.class" and > - div with an id and class

       Also see: http://legacy.datatables.net/usage/features
       */

      /* BASIC ;*/
      var responsiveHelper_dt_basic = undefined;
      var responsiveHelper_datatable_fixed_column = undefined;
      var responsiveHelper_datatable_col_reorder = undefined;
      var responsiveHelper_datatable_tabletools = undefined;

      var breakpointDefinition = {
        tablet : 1024,
        phone : 480
      };

      $('#dt_basic').dataTable({
        "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-12 hidden-xs'l>r>"+
        "t"+
        "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
        "autoWidth" : true,
        "oLanguage": {
          "sSearch": '<span class="input-group-addon"><i class="glyphicon glyphicon-search"></i></span>'
        },
        "preDrawCallback" : function() {
          // Initialize the responsive datatables helper once.
          if (!responsiveHelper_dt_basic) {
            responsiveHelper_dt_basic = new ResponsiveDatatablesHelper($('#dt_basic'), breakpointDefinition);
          }
        },
        "rowCallback" : function(nRow) {
          responsiveHelper_dt_basic.createExpandIcon(nRow);
        },
        "drawCallback" : function(oSettings) {
          responsiveHelper_dt_basic.respond();
        }
      });

      /* END BASIC */

      /* COLUMN FILTER  */
      var otable = $('#datatable_fixed_column').DataTable({
        //"bFilter": false,
        //"bInfo": false,
        //"bLengthChange": false
        //"bAutoWidth": false,
        //"bPaginate": false,
        //"bStateSave": true // saves sort state using localStorage
        "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6 hidden-xs'f><'col-sm-6 col-xs-12 hidden-xs'<'toolbar'>>r>"+
        "t"+
        "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
        "autoWidth" : true,
        "oLanguage": {
          "sSearch": '<span class="input-group-addon"><i class="glyphicon glyphicon-search"></i></span>'
        },
        "preDrawCallback" : function() {
          // Initialize the responsive datatables helper once.
          if (!responsiveHelper_datatable_fixed_column) {
            responsiveHelper_datatable_fixed_column = new ResponsiveDatatablesHelper($('#datatable_fixed_column'), breakpointDefinition);
          }
        },
        "rowCallback" : function(nRow) {
          responsiveHelper_datatable_fixed_column.createExpandIcon(nRow);
        },
        "drawCallback" : function(oSettings) {
          responsiveHelper_datatable_fixed_column.respond();
        }

      });
    });
