= form_for  @contract ,html: {id: 'wizard-1' , class: 'form-horizontal new_contract' ,novalidate: "novalidate" } do |contract|
  =contract.hidden_field :contractable_type , value: "Company"
  - if params.has_key?('id')
    =contract.hidden_field :parent_contract_id , value: params[:id]
  #bootstrap-wizard-1.col-sm-12
    .form-bootstrapWizard
      %ul.bootstrapWizard.form-wizard
        %li.active{"data-target" => "#step1"}
          %a{"data-toggle" => "tab", :href => "#tab1"}
            %span.step 1
            %span.title Job
        %li{"data-target" => "#step2"}
          %a{"data-toggle" => "tab", :href => "#tab2"}
            %span.step 2
            %span.title Sell Contract
        %li.step3{"data-target" => "#step3"}
          %a{"data-toggle" => "tab", :href => "#tab3"}
            %span.step 3
            %span.title Buy Contract
        / %li{"data-target" => "#step4"}
        /   %a{"data-toggle" => "tab", :href => "#tab4"}
        /     %span.step 4
        /     %span.title Activation
      .form-bootstrapWizard
        %ul.bootstrapWizard.form-wizard
          %li.step4{"data-target" => "#step4"}
            %a{"data-toggle" => "tab", :href => "#tab4"}
              %span.step 4
              %span.title Activation
      .clearfix
    .tab-content
      #tab1.tab-pane.active
        %br/
        %h3
          %strong Step 1
          \- Job Details
          = link_to 'NEW', "#" ,class: 'btn btn-success btn-sm pull-right header-btn hidden-mobile' , "data-toggle": "modal" , "data-target":"#new-contract-company"
        = render 'company/contracts/partials/job' , f: contract
      #tab2.tab-pane
        %br/
        %h3
          %strong Step 2
          \- Sell Contract
        = render 'company/contracts/partials/contract_and_docs' , f: contract
      #tab3.tab-pane
        %br/
        %h3
          %strong Step 3
          \- Buy Contract
        = render 'company/contracts/partials/docs_and_attachments' , f: contract
      / #tab4.tab-pane
      /   %br/
      /   %h3
      /     %strong Step 4
      /     \- Activation
      /   = render 'company/contracts/partials/teams_and_commission', f: contract

      -##tab4.tab-pane
      -#  %br/
      -#  %h3
      -#    %strong Step 4
      -#    \- Save Form
      -#  %br/
      -#  %h1.text-center.text-success
      -#    %strong
      -#      %i.fa.fa-check.fa-lg
      -#      Complete
      -#  %h4.text-center Click next to finish
      -#  %br/
      -#  %br/
      -##tab4.tab-pane
      -#  %br/
      -#  %h3
      -#    %strong Step 4
      -#    \- Teams & Commission
      -#  .row
      -#    .col-sm-12
      -#      .form-group
      -#        #custom_fields
      -#          .col-sm-12
      -#            = render 'company/contracts/partials/teams_and_commission', f: contract
      -#        %strong
      -#          .links.col-sm-12
      -#            = #link_to_add_association '+ Add Custom Field', e, :custom_fields, class: 'text-info pull-right', partial: 'shared/custom_fields'
      -#            %br/
      .form-actions
        .row
          .col-sm-12
            %ul.pager.wizard.no-margin
              %li.previous.disabled
                %a.btn.btn-lg.btn-default{:href => "javascript:void(0);"} Previous
              %li.next
                %a.btn.btn-lg.txt-color-darken{:href => "javascript:void(0);"} Next
              %li.pull-right.finish{:style=>"di"}
                %a.btn.btn-lg.btn-default{:href => "javascript:;"} Finish

.remote_container_contract
= render "company/companies/partials/new_company", for_remote: true
= render "company/jobs/partials/new_modal", for_remote: true
= render "company/candidates/partials/modal_candidate", for_remote: true
= render "company/company_contacts/company_contact_form_modal", for_remote: true


- content_for :head do
  %script{:src => "http://maps.google.com/maps/api/js?key=AIzaSyDk4kWlA522W3T4oGwdug5nKPXYMhU6rCE&sensor=false&libraries=places"}

- content_for :scripts do
  :javascript
    set_company_select('#select_clients', "Please Select Or Add new Client");
    set_job_candidate_select('#select_candidates', "Please Select Or Add new Candidate");
    set_company_select('#sell_contract_company', "Please Select Or Add new Company");
    set_company_select('#buy_contract_company', "Please Select Or Add new Company");
    set_candidate_select('#buy_contract_candidate', "Please Select Or Add new Candidate");
    set_job_select('#select_jobs', "Please Select Or Add new Job");
    set_company_contacts_select('#select_sell_company_contacts', "Please Select Or Add new Contacts", "#sell_contract_company");
    set_company_contacts_select('#select_buy_company_contacts', "Please Select Or Add new Contacts", "#buy_contract_company");

    $( document ).ready(function() {
      $(".multi-select2-role").select2({placeholder: "Select a Role(s)"});
      $(".multi-select2-company-docs").select2({placeholder: "Select Document(s)"});
    });

    $( document ).ready(function() {
      $('#contract_start_date').datepicker({
        dateFormat : 'dd/mm/yy',
        prevText : '<i class="fa fa-chevron-left"></i>',
        nextText : '<i class="fa fa-chevron-right"></i>',
        onSelect : function(selectedDate) {
          $('#contract_end_date').datepicker('option', 'minDate', selectedDate );
        }
      });

      $('#contract_end_date').datepicker({
        dateFormat : 'dd/mm/yy',
        prevText : '<i class="fa fa-chevron-left"></i>',
        nextText : '<i class="fa fa-chevron-right"></i>'
      });
      $(".cr_start_date, .cr_end_date, .pr_start_date, .pr_end_date, .date_1").datepicker({
          dateFormat : 'dd/mm/yy'
      });

      $('.con-time').timepicker();

      $(".sell-invoice").on("change", function(){
        $(".sell-invoice-setting").children().addClass("hidden");
        if($(this).val() == "daily"){
          $(".sell-invoice-setting").find('.daily').removeClass("hidden");
        } else if($(this).val() == "weekly" || $(this).val() == "biweekly"){
          $(".sell-invoice-setting").find('.week').removeClass("hidden");
        } else if($(this).val() == "twice a month"){
          $(".sell-invoice-setting").find('.twice-month, .month').removeClass("hidden");
        } else if($(this).val() == "monthly"){
          $(".sell-invoice-setting").find('.month').removeClass("hidden");
        }
      });

      $(".sell-time-sheet").on("change", function(){
        $(".s-ts-set").children().addClass("hidden");
        if($(this).val() == "daily"){
          $(".s-ts-set").find('.daily').removeClass("hidden");
        } else if($(this).val() == "weekly" || $(this).val() == "biweekly"){
          $(".s-ts-set").find('.week').removeClass("hidden");
        } else if($(this).val() == "twice a month"){
          $(".s-ts-set").find('.twice-month, .month').removeClass("hidden");
        } else if($(this).val() == "monthly"){
          $(".s-ts-set").find('.month').removeClass("hidden");
        }
      });

      $(".sell-time-sheet-approve").on("change", function(){
        $(".s-ts-apv-set").children().addClass("hidden");
        if($(this).val() == "daily"){
          $(".s-ts-apv-set").find('.daily').removeClass("hidden");
        } else if($(this).val() == "weekly" || $(this).val() == "biweekly"){
          $(".s-ts-apv-set").find('.week').removeClass("hidden");
        } else if($(this).val() == "twice a month"){
          $(".s-ts-apv-set").find('.twice-month, .month').removeClass("hidden");
        } else if($(this).val() == "monthly"){
          $(".s-ts-apv-set").find('.month').removeClass("hidden");
        }
      });

      $(".buy-time-sheet").on("change", function(){
        $(".b-ts-set").children().addClass("hidden");
        if($(this).val() == "daily"){
          $(".b-ts-set").find('.daily').removeClass("hidden");
        } else if($(this).val() == "weekly" || $(this).val() == "biweekly"){
          $(".b-ts-set").find('.week').removeClass("hidden");
        } else if($(this).val() == "twice a month"){
          $(".b-ts-set").find('.twice-month, .month').removeClass("hidden");
        } else if($(this).val() == "monthly"){
          $(".b-ts-set").find('.month').removeClass("hidden");
        }
      });

      $(".buy-time-approve-sheet").on("change", function(){
        $(".b-ts-apv-set").children().addClass("hidden");
        if($(this).val() == "daily"){
          $(".b-ts-apv-set").find('.daily').removeClass("hidden");
        } else if($(this).val() == "weekly" || $(this).val() == "biweekly"){
          $(".b-ts-apv-set").find('.week').removeClass("hidden");
        } else if($(this).val() == "twice a month"){
          $(".b-ts-apv-set").find('.twice-month, .month').removeClass("hidden");
        } else if($(this).val() == "monthly"){
          $(".b-ts-apv-set").find('.month').removeClass("hidden");
        }
      });

      $(".buy-sal-cal").on("change", function(){
        $(".b-sal-cal").children().addClass("hidden");
        if($(this).val() == "daily"){
          $(".b-sal-cal").find('.daily').removeClass("hidden");
        } else if($(this).val() == "weekly" || $(this).val() == "biweekly"){
          $(".b-sal-cal").find('.week').removeClass("hidden");
        } else if($(this).val() == "twice a month"){
          $(".b-sal-cal").find('.twice-month, .month').removeClass("hidden");
        } else if($(this).val() == "monthly"){
          $(".b-sal-cal").find('.month').removeClass("hidden");
        }
      });

      $(".buy-invoice-recepit").on("change", function(){
        $(".b-in-re-set").children().addClass("hidden");
        if($(this).val() == "daily"){
          $(".b-in-re-set").find('.daily').removeClass("hidden");
        } else if($(this).val() == "weekly" || $(this).val() == "biweekly"){
          $(".b-in-re-set").find('.week').removeClass("hidden");
        } else if($(this).val() == "twice a month"){
          $(".b-in-re-set").find('.twice-month, .month').removeClass("hidden");
        } else if($(this).val() == "monthly"){
          $(".b-in-re-set").find('.month').removeClass("hidden");
        }
      });

      $(".contract-type-radio input[type='radio']").on("change", function(){
        if($(this).val() == "C2C"){
          $(".c2c-type").removeClass('hidden');
          $('.corp-corp').text('Vendor Bill');
        } else {
          $(".c2c-type").addClass('hidden');
          $('.corp-corp').text('Salary Calculation');
        }
      });

      $(".buy-time-sheet").on("change", function(){
        $(".buy-time-sheet-setting").children().addClass("hidden");
        if($(this).val() == "weekly" || $(this).val() == "biweekly"){
          $(".buy-time-sheet-setting").find('.week').removeClass("hidden");
        } else if($(this).val() == "twice a month"){
          $(".buy-time-sheet-setting").find('.twice-month, .month').removeClass("hidden");
        } else if($(this).val() == "monthly"){
          $(".buy-time-sheet-setting").find('.month').removeClass("hidden");
        }
        });
    });

    $( document ).on( "change", ".is-require-sign", function( event ) {
       $(this).parent().next('.assign_signable').find('.whois_sign').empty().trigger('change')
       $(this).parent().next('.assign_signable').find('.sign-nested-fields').remove();
       if ($(this).is(":checked")){
         $(this).parent().next('.assign_signable').removeClass('hidden');
       } else {
         $(this).parent().next('.assign_signable').addClass('hidden');
       }
    });

    $( document ).on( "select2:unselect", ".select_company_contacts", function( e ) {
      $(this).closest('.company_contacts').find('div.contact-nested-fields').find(':input.contact-id[value=' + e.params.data.id + ']').closest('div.contact-nested-fields').remove();
    });

    $( document ).on( "select2:select", ".select_company_contacts", function( e ) {
      var sign_btn = $(this).closest('.company_contacts').find("a.link-company-contacts");
      var obj = $( sign_btn.attr('data-form-prepend') );
      var time_stamp = (new Date()).getTime() ;
      obj.find('input').each( function() {
        $(this).attr( 'name', function() {
          return $(this).attr('name').replace( 'new_record', time_stamp);
        });
      });
      obj.insertBefore( sign_btn );
      $(this).closest('.company_contacts').find('div.contact-nested-fields:last').find("input.contact-id").val(e.params.data.id);
    });


    $( document ).on( "select2:unselect", ".whois_sign", function( e ) {
      $(this).closest('.assign_signable').find('div.sign-nested-fields').find(':input.signable-id[value=' + e.params.data.id.split("_")[0] + ']').closest('div.sign-nested-fields').remove();
    });

    $( document ).on( "select2:select", ".whois_sign", function( e ) {
      var sign_btn = $(this).closest('.assign_signable').find("a.doc-user-generater");
      var obj = $( sign_btn.attr('data-form-prepend') );
      var time_stamp = (new Date()).getTime() ;
      obj.find('input').each( function() {
        $(this).attr( 'name', function() {
          return $(this).attr('name').replace( 'new_record', time_stamp);
        });
      });
      obj.insertBefore( sign_btn );
      $(this).closest('.assign_signable').find('div.sign-nested-fields:last').find("input.signable-id").val(e.params.data.id.split("_")[0]);
      $(this).closest('.assign_signable').find('div.sign-nested-fields:last').find("input.signable-type").val(e.params.data.id.split("_")[1]);
    });




    $( document ).on( "select2:unselect", ".commission-user", function( e ) {
      $(this).closest('.assign_commission_user').find('div.account-nested-fields').find(':input.accountable-id[value=' + e.params.data.id.split("_")[0] + ']').closest('div.account-nested-fields').remove();
    });

    $( document ).on( "select2:select", ".commission-user", function( e ) {
      var sign_btn = $(this).closest('.assign_commission_user').find("a.com-user-generater");
      var obj = $( sign_btn.attr('data-form-prepend') );
      var time_stamp = (new Date()).getTime() ;
      obj.find('input').each( function() {
        $(this).attr( 'name', function() {
          return $(this).attr('name').replace( 'new_record', time_stamp);
        });
      });
      obj.insertBefore( sign_btn );
      $(this).closest('.assign_commission_user').find('div.account-nested-fields:last').find("input.accountable-id").val(e.params.data.id.split("_")[0]);
      $(this).closest('.assign_commission_user').find('div.account-nested-fields:last').find("input.accountable-type").val(e.params.data.id.split("_")[1]);
    });

    //$('#contract-attachment').on('cocoon:after-insert', function(e, insertedItem) {
    //  insertedItem.find('.filepicker-attachment').each(function(i,e){
    //    filepicker.constructWidget(e);
    //    $(".filepicker-attachment").on('click',function() {
    //      $('.fp__overlay').css({'z-index':'99999'})
    //    });
    //    $('.filepicker-attachment').on('click',function() {
    //      $(this).hide();
    //    });
    //  });
    //});
    function toggleFields() {
        if($('#contract_is_commission').val() == "true")
          $("#contract-commision").show();
        else
          $("#contract-commision").hide();

        if($('#contract_commission_type option:selected').val() == "fixed")
           $(".max-commission").hide();
        else
          $(".max-commission").show();

      }
    $(document).ready(function(){
      $('.sigPad').signaturePad({drawOnly:true});
      toggleFields();
      $(".multi-select2-company-docs").select2({placeholder: "Select a Doc(s)"});
      $('#contract_start_date').datepicker({
        dateFormat : 'dd/mm/yy'
      });
      $('#contract_end_date').datepicker({
        dateFormat : 'dd/mm/yy'
      });
      $("#contract_is_commission , #contract_commission_type").change(function () {
        toggleFields();
      });
    });

    google.maps.event.addDomListener(window, 'load', function () {
      var places = new google.maps.places.Autocomplete(document.getElementById('contract_work_location'));
      google.maps.event.addListener(places, 'place_changed', function () {
        var place = places.getPlace();
        $("#post_ad_latitude").val(place.geometry.location.lat());
        $("#post_ad_longitude").val(place.geometry.location.lng());
      });
    });

    var input = document.getElementById('contract_work_location');
    google.maps.event.addDomListener(input, 'keydown', function(event) {
      if (event.keyCode === 13) {
        event.preventDefault();
      }
    });