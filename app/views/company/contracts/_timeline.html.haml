.col-md-4
  .timeline-blockwrap.overdue-blockwrap
    %h3.timeline-title
      Overdue 
    
    - @contract_cycles.pending.overdue.order(start_date: :desc).each do |cc|
      / - cy = ContractCycle.find_by(contract_id: cc.contract_id, end_date: cc.end_date, candidate_id: cc.candidate_id)
      .timeline-block
        %span.badge.status-badge.red-badge
          - if ['Salary clear', 'Salary process', 'Salary calculation'].include? cc.note
            = link_to cc.note, final_salary_salaries_path(cycle_id: cc.id, note: cc.note), :style=>'color:#FFFFFF;'
          - else
            = cc.note
        %span.due-txt
          #{cc&.doc_date&.strftime("%d %B %Y")}
        %br
        %br
        Contract ID - #{cc.contract.id} - Cycle ID #{cc.id}
        %p.mb-0.submitted-name
          %b Name: #{cc.candidate.present? ? cc.candidate.full_name : cc&.contract&.sell_contracts&.first&.company&.full_name}
          %b
            = link_to 'Approve', timesheets_path, class: 'btn' if cc.note == 'Timesheet Approve'
        %p Client: #{cc&.contract&.company&.full_name}
        %p Tax type: #{cc.contract.buy_contracts.first.contract_type}
        - if cc.note == 'Timesheet submit'
          .row.border-top.pt-2
            .col-sm-2.text-center Plan
            .col-sm-7.text-center Cycle
            .col-sm-2.text-center Actual
          .row
            .col-sm-2.text-center #{cc&.contract&.sell_contracts&.first&.expected_hour}
            .col-sm-8.text-center
              / #{cc.start_date.strftime("%d/%m/%Y").to_s+' - '+cc.end_date.utc.strftime("%d/%m/%Y")}
            / .col-sm-2.text-center #{cc.ts_submitteds.first.total_time}
            

.col-md-4
  .timeline-blockwrap
    %h3.timeline-title
      To Do 
    %p.small-text (Next 10 Days)

    - @contract_cycles.includes(:company).pending.todo.order(start_date: :asc).each do |cc|
      / - cy = ContractCycle.find_by(contract_id: cc.contract_id, end_date: cc.end_date, candidate_id: cc.candidate_id)
      .timeline-block
        = cc&.start_date&.utc&.strftime("%d %B %Y").to_s+' - '+cc&.end_date&.utc&.strftime("%d %B %Y").to_s
        %br
        %span.badge.status-badge.yellow-badge
          - if ['Salary clear', 'Salary process', 'Salary calculation'].include? cc.note
            = link_to cc.note, final_salary_salaries_path(cycle_id: cc.id, note: cc.note)
          - else
            = cc.note
        %span.due-txt
          #{cc&.doc_date&.strftime("%d %B %Y")}
        %br
        %br
        Contract ID - #{cc.contract.id} - Cycle ID #{cc.id}
        %p.mb-0.submitted-name
          %b Name: #{cc.candidate.present? ? cc.candidate.full_name : cc.company.full_name}
          %b
            = link_to 'Approve', timesheets_path, class: 'btn' if cc.note == 'Timesheet Approve'
        %p Client: #{cc&.contract&.company&.full_name}
        %p Tax type: #{cc.contract.buy_contracts.first.contract_type}
        - if cc.note == 'Timesheet submit'
          .row.border-top.pt-2
            .col-sm-2.text-center Plan
            .col-sm-7.text-center Cycle
            .col-sm-2.text-center Actual
          .row
            .col-sm-2.text-center #{cc&.contract&.sell_contracts&.first&.expected_hour}
            .col-sm-8.text-center
              / #{cc.start_date.strftime("%d/%m/%Y").to_s+' - '+cc.end_date.utc.strftime("%d/%m/%Y")}
            / .col-sm-2.text-center #{cc.ts_submitteds&.first&.total_time}


      
.col-md-4
  .timeline-blockwrap
    %h3.timeline-title
      Completed 
    %p.small-text (Past 10 Days including today)
    
    - @contract_cycles.includes(:company).completed.order(id: :asc).each do |cc|
      / - cy = ContractCycle.find_by(contract_id: cc.contract_id, end_date: cc.end_date, candidate_id: cc.candidate_id, status: 'completed')

      .timeline-block
        %span.badge.status-badge.skyblue-badge
          = cc.note
        %span.due-txt
          #{cc.end_date.utc.strftime("%d %B %Y")}
        %br
        %br
        Contract ID - #{cc.contract.id} - Cycle ID #{cc.id}
        %p.mb-0.submitted-name
          %b Name: #{cc.candidate.present? ? cc.candidate.full_name : cc.company.full_name}
        %p Client: #{cc&.contract&.company&.full_name}
        %p Tax type: #{cc.contract.buy_contracts.first.contract_type}
        - if cc.note == 'Timesheet submit'
          .row.border-top.pt2
            .col-sm-2.text-center Plan
            .col-sm-7.text-center Cycle
            .col-sm-2.text-center Actual
          .row
            .col-sm-2.text-center #{cc&.contract&.sell_contracts&.first&.expected_hour}
            .col-sm-8.text-center
              / #{cc.start_date.strftime("%d/%m/%Y").to_s+' - '+cc.end_date.utc.strftime("%d/%m/%Y")}
            / .col-sm-2.text-center #{cc.ts_submitteds&.first&.total_time}