%section
  .container
    .row
      %hr
      / / = form_tag filter_timeline_contracts_path, remote: true, method: :get do
      /   .col-md-2
      /     .form-group.mt-10
      /       / = select_tag "Contracts", options_from_collection_for_select(@contracts, 'id', 'title'),{class: "form-control contract_list", prompt: "All", onchange: "this.form.submit();"}
      /   .col-md-2
      /     .form-group.mt-10
      /       / = select_tag "Contracts", options_from_collection_for_select(@candidates, 'id', 'full_name'),{class: "form-control candidate_list", prompt: "All"}
      /   .col-md-2
      /     .form-group.mt-10
      /       %select.form-control
      /         %option All Actions
      /         %option 2
      /         %option 3
      /         %option 4
      /         %option 5
    .row
      .col-xs-12
        %p.mb-0
          Showing Tasks for you from : All Contracts, All Freelancers and All Actions
    .row
      .col-md-4
        .timeline-blockwrap.overdue-blockwrap
          %h3.timeline-title
            Overdue 
          
          - @overdue_contract_cycles.each do |cc|
            / - cy = ContractCycle.find_by(contract_id: cc.contract_id, end_date: cc.end_date, candidate_id: cc.candidate_id)
            .timeline-block
              %span.badge.status-badge.red-badge
                #{cc.note}
              %span.due-txt
                #{cc.end_date.utc.strftime("%d %B %Y")}
              %br
              %br
              Contract ID - #{cc.contract.id} - Cycle ID #{cc.id}
              %p.mb-0.submitted-name
                %b Name: #{cc.candidate.present? ? cc.candidate.full_name : cc&.contract&.sell_contracts&.first&.company&.full_name}
                %b
                  = link_to 'submit', timesheets_path, class: 'btn' if cc.note == 'Timesheet Approve'
              %p Client: #{cc&.contract&.company&.full_name}
              %p Tax type: #{cc.contract.buy_contracts.first.contract_type}
              - if cc.note == 'Timesheet submit'
                %hr
                .row
                  .col-sm-2.text-center Plan
                  .col-sm-8.text-center Cycle
                  .col-sm-2.text-center Actual
                .row
                  .col-sm-2.text-center #{cc&.contract&.sell_contracts&.first&.expected_hour}
                  .col-sm-8.text-center
                    #{cc.start_date.strftime("%d/%m/%Y").to_s+' - '+cc.end_date.strftime("%d/%m/%Y")}
                  .col-sm-2.text-center #{cc.ts_submitteds.first.total_time}
                  

      .col-md-4
        .timeline-blockwrap
          %h3.timeline-title
            To Do 
          %p.small-text (Next 10 Days)

          - @todo_contract_cycles.each do |cc|
            / - cy = ContractCycle.find_by(contract_id: cc.contract_id, end_date: cc.end_date, candidate_id: cc.candidate_id)
            .timeline-block
              %span.badge.status-badge.yellow-badge
                #{cc.note}
              %span.due-txt
                #{cc.end_date.utc.strftime("%d %B %Y")}
              %br
              %br
              Contract ID - #{cc.contract.id} - Cycle ID #{cc.id}
              %p.mb-0.submitted-name
                %b Name: #{cc.candidate.present? ? cc.candidate.full_name : cc.company.full_name}
              %p Client: #{cc&.contract&.company&.full_name}
              %p Tax type: #{cc.contract.buy_contracts.first.contract_type}
              - if cc.note == 'Timesheet submit'
                %hr
                .row
                  .col-sm-2.text-center Plan
                  .col-sm-8.text-center Cycle
                  .col-sm-2.text-center Actual
                .row
                  .col-sm-2.text-center #{cc&.contract&.sell_contracts&.first&.expected_hour}
                  .col-sm-8.text-center
                    #{cc.start_date.strftime("%d/%m/%Y").to_s+' - '+cc.end_date.strftime("%d/%m/%Y")}
                  .col-sm-2.text-center #{cc.ts_submitteds&.first&.total_time}


      
      .col-md-4
        .timeline-blockwrap
          %h3.timeline-title
            Completed 
          %p.small-text (Past 10 Days including today)
          
          - @completed_contract_cycles.each do |cc|
            / - cy = ContractCycle.find_by(contract_id: cc.contract_id, end_date: cc.end_date, candidate_id: cc.candidate_id, status: 'completed')

            .timeline-block
              %span.badge.status-badge.skyblue-badge
                = cc.note
              %span.due-txt
                #{cc.end_date.utc.strftime("%d %B %Y")}
              %br
              %br
              Contract ID - #{cc.contract.id} - Cycle ID #{cc.id}
              %p.mb-0.submitted-name
                %b Name: #{cc.candidate.present? ? cc.candidate.full_name : cc.company.full_name}
              %p Client: #{cc&.contract&.company&.full_name}
              %p Tax type: #{cc.contract.buy_contracts.first.contract_type}
              - if cc.note == 'Timesheet submit'
                %hr
                .row
                  .col-sm-2.text-center Plan
                  .col-sm-8.text-center Cycle
                  .col-sm-2.text-center Actual
                .row
                  .col-sm-2.text-center #{cc&.contract&.sell_contracts&.first&.expected_hour}
                  .col-sm-8.text-center
                    #{cc.start_date.strftime("%d/%m/%Y").to_s+' - '+cc.end_date.strftime("%d/%m/%Y")}
                  .col-sm-2.text-center #{cc.ts_submitteds&.first&.total_time}


