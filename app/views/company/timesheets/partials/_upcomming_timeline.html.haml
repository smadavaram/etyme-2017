
.timeline-blockwrap.upcomming_timeline
  - @timesheets.each do |ts|
    - cc = ts.contract_cycle
    / - cy = ContractCycle.find_by(contract_id: cc.contract_id, end_date: cc.end_date, candidate_id: cc.candidate_id)
    .timeline-block.m-1{style: "width: 300px"}
      = cc&.start_date&.utc&.strftime("%d %B %Y").to_s+' - '+cc&.end_date&.utc&.strftime("%d %B %Y").to_s
      %br
      %span.badge.status-badge.yellow-badge
        - if ['Salary clear', 'Salary process', 'Salary calculation'].include? cc.note
          = link_to cc.note, final_salary_salaries_path(cycle_id: cc.id, note: cc.note)
        - else
          = cc.cycle_type.tableize.singularize.split("_").join(" ").capitalize
      %span.due-txt
        #{cc&.doc_date&.strftime("%d %B %Y")}
      %br
      %br
      Contract ID - #{cc.contract.id} - Cycle ID #{cc.id}
      %p.mb-0.submitted-name
        %b= "Name: #{cc.buy_contract? ? cc.candidate.present? ? cc.candidate.full_name.capitalize : cc.company.full_name.capitalize : cc.user.full_name.capitalize}"
        %b= link_to 'Approve', timesheets_path, class: 'btn' if cc.note == 'Timesheet Approve'
      %p Client: #{cc&.contract&.company&.full_name}
      %p Tax type: #{cc.contract.buy_contract.contract_type}
      - if cc.note == 'Timesheet submit'
        .row.border-top.pt-2
          .col-sm-2.text-center Plan
          .col-sm-7.text-center Cycle
          .col-sm-2.text-center Actual
        .row
          .col-sm-2.text-center #{cc&.contract&.sell_contract.expected_hour}
          .col-sm-8.text-center
            / #{cc.start_date.strftime("%d/%m/%Y").to_s+' - '+cc.end_date.utc.strftime("%d/%m/%Y")}
          / .col-sm-2.text-center #{cc.ts_submitteds&.first&.total_time}
